// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetdash.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	fleetdash.proto

It has these top-level messages:
	EveLogEventBatch
	EveLogEvent
	BatchedEveLogEventResponse
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "google.golang.org/protobuf/types/known/timestamppb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EveLogEventBatch struct {
	Events []*EveLogEvent `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
}

func (m *EveLogEventBatch) Reset()                    { *m = EveLogEventBatch{} }
func (m *EveLogEventBatch) String() string            { return proto.CompactTextString(m) }
func (*EveLogEventBatch) ProtoMessage()               {}
func (*EveLogEventBatch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EveLogEventBatch) GetEvents() []*EveLogEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type EveLogEvent struct {
	Event       string                     `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
	Timestamp   *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	CharacterId string                     `protobuf:"bytes,3,opt,name=characterId" json:"characterId,omitempty"`
	Amount      int32                      `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Pilot       string                     `protobuf:"bytes,5,opt,name=pilot" json:"pilot,omitempty"`
	Ship        string                     `protobuf:"bytes,6,opt,name=ship" json:"ship,omitempty"`
	Weapon      string                     `protobuf:"bytes,7,opt,name=weapon" json:"weapon,omitempty"`
	Application string                     `protobuf:"bytes,8,opt,name=application" json:"application,omitempty"`
	Corporation string                     `protobuf:"bytes,9,opt,name=corporation" json:"corporation,omitempty"`
	Alliance    string                     `protobuf:"bytes,10,opt,name=alliance" json:"alliance,omitempty"`
}

func (m *EveLogEvent) Reset()                    { *m = EveLogEvent{} }
func (m *EveLogEvent) String() string            { return proto.CompactTextString(m) }
func (*EveLogEvent) ProtoMessage()               {}
func (*EveLogEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EveLogEvent) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *EveLogEvent) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *EveLogEvent) GetCharacterId() string {
	if m != nil {
		return m.CharacterId
	}
	return ""
}

func (m *EveLogEvent) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *EveLogEvent) GetPilot() string {
	if m != nil {
		return m.Pilot
	}
	return ""
}

func (m *EveLogEvent) GetShip() string {
	if m != nil {
		return m.Ship
	}
	return ""
}

func (m *EveLogEvent) GetWeapon() string {
	if m != nil {
		return m.Weapon
	}
	return ""
}

func (m *EveLogEvent) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *EveLogEvent) GetCorporation() string {
	if m != nil {
		return m.Corporation
	}
	return ""
}

func (m *EveLogEvent) GetAlliance() string {
	if m != nil {
		return m.Alliance
	}
	return ""
}

type BatchedEveLogEventResponse struct {
}

func (m *BatchedEveLogEventResponse) Reset()                    { *m = BatchedEveLogEventResponse{} }
func (m *BatchedEveLogEventResponse) String() string            { return proto.CompactTextString(m) }
func (*BatchedEveLogEventResponse) ProtoMessage()               {}
func (*BatchedEveLogEventResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*EveLogEventBatch)(nil), "EveLogEventBatch")
	proto.RegisterType((*EveLogEvent)(nil), "EveLogEvent")
	proto.RegisterType((*BatchedEveLogEventResponse)(nil), "BatchedEveLogEventResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FleetDashService service

type FleetDashServiceClient interface {
	PostEveLogEventBatch(ctx context.Context, in *EveLogEventBatch, opts ...grpc.CallOption) (*BatchedEveLogEventResponse, error)
}

type fleetDashServiceClient struct {
	cc *grpc.ClientConn
}

func NewFleetDashServiceClient(cc *grpc.ClientConn) FleetDashServiceClient {
	return &fleetDashServiceClient{cc}
}

func (c *fleetDashServiceClient) PostEveLogEventBatch(ctx context.Context, in *EveLogEventBatch, opts ...grpc.CallOption) (*BatchedEveLogEventResponse, error) {
	out := new(BatchedEveLogEventResponse)
	err := grpc.Invoke(ctx, "/FleetDashService/PostEveLogEventBatch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FleetDashService service

type FleetDashServiceServer interface {
	PostEveLogEventBatch(context.Context, *EveLogEventBatch) (*BatchedEveLogEventResponse, error)
}

func RegisterFleetDashServiceServer(s *grpc.Server, srv FleetDashServiceServer) {
	s.RegisterService(&_FleetDashService_serviceDesc, srv)
}

func _FleetDashService_PostEveLogEventBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EveLogEventBatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetDashServiceServer).PostEveLogEventBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FleetDashService/PostEveLogEventBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetDashServiceServer).PostEveLogEventBatch(ctx, req.(*EveLogEventBatch))
	}
	return interceptor(ctx, in, info, handler)
}

var _FleetDashService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "FleetDashService",
	HandlerType: (*FleetDashServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostEveLogEventBatch",
			Handler:    _FleetDashService_PostEveLogEventBatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fleetdash.proto",
}

func init() { proto.RegisterFile("fleetdash.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xdd, 0x6a, 0xc2, 0x30,
	0x14, 0xa6, 0xfe, 0x74, 0x9a, 0x0e, 0xe6, 0x82, 0x8c, 0xd0, 0x0d, 0x56, 0x64, 0x17, 0xbd, 0x31,
	0x82, 0x63, 0xe0, 0xb5, 0x9b, 0xc2, 0x60, 0x17, 0xd2, 0xed, 0xca, 0xbb, 0x58, 0x8f, 0x36, 0x50,
	0x7b, 0x42, 0x13, 0xdd, 0x3b, 0xed, 0x0d, 0xf6, 0x76, 0xa3, 0x69, 0xd5, 0xb2, 0xb1, 0xbb, 0x7c,
	0x3f, 0x9c, 0xef, 0x23, 0xe7, 0x90, 0xab, 0x4d, 0x0a, 0x60, 0xd6, 0x42, 0x27, 0x5c, 0xe5, 0x68,
	0xd0, 0xbf, 0xdf, 0x22, 0x6e, 0x53, 0x18, 0x59, 0xb4, 0xda, 0x6f, 0x46, 0x46, 0xee, 0x40, 0x1b,
	0xb1, 0x53, 0xa5, 0x61, 0x30, 0x21, 0xbd, 0xd9, 0x01, 0xde, 0x70, 0x3b, 0x3b, 0x40, 0x66, 0xa6,
	0xc2, 0xc4, 0x09, 0x7d, 0x20, 0x2e, 0x14, 0x48, 0x33, 0x27, 0x68, 0x86, 0xde, 0xf8, 0x92, 0xd7,
	0x2c, 0x51, 0xa5, 0x0d, 0xbe, 0x1b, 0xc4, 0xab, 0xf1, 0xb4, 0x4f, 0xda, 0x56, 0x61, 0x4e, 0xe0,
	0x84, 0xdd, 0xa8, 0x04, 0x74, 0x42, 0xba, 0xa7, 0x48, 0xd6, 0x08, 0x9c, 0xd0, 0x1b, 0xfb, 0xbc,
	0x2c, 0xc5, 0x8f, 0xa5, 0xf8, 0xc7, 0xd1, 0x11, 0x9d, 0xcd, 0x34, 0x20, 0x5e, 0x9c, 0x88, 0x5c,
	0xc4, 0x06, 0xf2, 0xd7, 0x35, 0x6b, 0xda, 0xa9, 0x75, 0x8a, 0xde, 0x10, 0x57, 0xec, 0x70, 0x9f,
	0x19, 0xd6, 0x0a, 0x9c, 0xb0, 0x1d, 0x55, 0xa8, 0x68, 0xa2, 0x64, 0x8a, 0x86, 0xb5, 0xcb, 0x26,
	0x16, 0x50, 0x4a, 0x5a, 0x3a, 0x91, 0x8a, 0xb9, 0x96, 0xb4, 0xef, 0x62, 0xc2, 0x27, 0x08, 0x85,
	0x19, 0xbb, 0xb0, 0x6c, 0x85, 0x8a, 0x6c, 0xa1, 0x54, 0x2a, 0x63, 0x61, 0x24, 0x66, 0xac, 0x53,
	0x66, 0xd7, 0x28, 0xdb, 0x0e, 0x73, 0x85, 0x79, 0xe9, 0xe8, 0x56, 0xed, 0xce, 0x14, 0xf5, 0x49,
	0x47, 0xa4, 0xa9, 0x14, 0x59, 0x0c, 0x8c, 0x58, 0xf9, 0x84, 0x07, 0x77, 0xc4, 0xb7, 0x5f, 0x0d,
	0xeb, 0xfa, 0xcf, 0x82, 0x56, 0x98, 0x69, 0x18, 0x2f, 0x49, 0x6f, 0x5e, 0xec, 0xf1, 0x45, 0xe8,
	0xe4, 0x1d, 0xf2, 0x83, 0x8c, 0x81, 0xce, 0x49, 0x7f, 0x81, 0xda, 0xfc, 0xd9, 0xd5, 0x35, 0xff,
	0x4d, 0xf9, 0xb7, 0xfc, 0xff, 0xd9, 0xd3, 0xa7, 0x25, 0xb3, 0x37, 0x32, 0x2c, 0x8e, 0x64, 0x18,
	0x63, 0x7e, 0xbe, 0x8d, 0xaf, 0x06, 0x3b, 0xc5, 0x3e, 0xa7, 0x12, 0x32, 0xc3, 0x17, 0x95, 0xb4,
	0x72, 0xad, 0xe9, 0xf1, 0x27, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x8d, 0xb3, 0xbc, 0x61, 0x02, 0x00,
	0x00,
}
